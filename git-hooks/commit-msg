#!/usr/bin/env ruby

######################################
########## About commit-msg ##########
######################################

# This hook RUNS after writing commit message
# and take the only one parameter shown in code ARGV[0]
# The parameter is the path to a temporary file that contains the commit message
# IF, THIS SCRIPT EXITS NON-ZERO like exit 1 that shown in code, Git abort the commit process.
# SO, THIS HOOK usually used to validate commit messages.

######################################
########## About commit-msg ##########
######################################

require 'colorize' # Colorized Line

$regex =  /^\(#[0-9]+\)\s[\d\D]*/

def check_message_format
  message_file = ARGV[0]
  message = File.read(message_file)

  if !$regex.match(message)
      puts "!!Caution!! It violates the commit message rules.".red # If you dont wanna be colorized console, delete .red
      puts ""
      puts "[Rules]"
      puts "Variables : ##Variable##".blue # If you dont wanna be colorized console, delete .blue
      puts ""
      puts "(###IssueNumber##) ##Commit Message##"
      puts ""
      puts "Example".blue # If you dont wanna be colorized console, delete .blue
      puts "(#152) Initial Commit"
      exit 1
  end
end

check_message_format
